{"version":3,"sources":["webpack:///./src/components/contentWrap.tsx","webpack:///./src/components/accessCounter.tsx","webpack:///./src/components/daysFromFoundation.tsx","webpack:///./src/components/randomWord.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/marquee.tsx"],"names":["BackGroundWrap","styled","div","props","bgImg","ContentWrap","children","data","useStaticQuery","publicURL","AccessCounterContent","NumberText","span","AccessCounter","useState","accessStr","setAccessStr","useEffect","fetch","then","response","json","String","padStart","catch","error","map","str","index","key","Content","DaysFromFoundation","START_TIME","Date","getTime","TIME_DIFF","now","daysFromStr","Math","floor","RandomWordWrap","ImgWrap","Title","h2","ParagraphWrap","RandomWord","node","allIndexCsv","nodes","number","random","length","src","file","alt","word","Container","MainContents","CatchTextWrap","ComponentWrap","FlexWrap","context","render","title","this","site","siteMetadata","meta","name","content","description","text","to","React","pageQuery","MarqueeWrap","marqueeAnimation","keyframes","Paragraph","p","duration","delay","Marquee"],"mappings":"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","file":"component---src-pages-index-tsx-89249256e7604b96d4ee.js","sourcesContent":["import * as React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\n\ntype Props = {\n  bgImg: string\n}\n\nconst BackGroundWrap = styled.div`\n  background-color: #078282;\n  background-image: url(${(props: Props) => props.bgImg});\n  background-repeat: repeat;\n`\n\nconst ContentWrap: React.FC = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      bgImg: file(relativePath: { eq: \"background.svg\" }) {\n        publicURL\n      }\n    }\n  `)\n\n  return (\n    <BackGroundWrap bgImg={data.bgImg.publicURL}>{children}</BackGroundWrap>\n  )\n}\n\nexport default ContentWrap\n","import React, { ReactElement, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst AccessCounterContent = styled.div`\n  font-size: 30px;\n`\n\nconst NumberText = styled.span`\n  color: #ebff00;\n  background-color: #000000;\n  padding: 2px 4px;\n  margin: 0 2px;\n  box-sizing: border-box;\n`\n\nconst AccessCounter: React.FC = (): ReactElement => {\n  const [accessStr, setAccessStr] = useState('LOADING')\n  useEffect(() => {\n    fetch(\n      'https://script.google.com/macros/s/AKfycbxNRKPbWajypmgXMrmcwVJCB7uqORyU7MfdLi3O0rIQm98EJCc/exec'\n    )\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        setAccessStr(String(json['your_access']).padStart(4, '0'))\n        return json\n      })\n      .catch(error => {\n        setAccessStr('ERROR')\n      })\n  }, [])\n\n  return (\n    <AccessCounterContent>\n      あなたは\n      {[...accessStr].map((str, index) => {\n        return <NumberText key={str + String(index)}>{str}</NumberText>\n      })}\n      人目の参拝者です\n    </AccessCounterContent>\n  )\n}\n\nexport default AccessCounter\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst Content = styled.div`\n  font-size: 30px;\n`\n\nconst NumberText = styled.span`\n  color: #ebff00;\n  background-color: #000000;\n  padding: 2px 4px;\n  margin: 0 2px;\n  box-sizing: border-box;\n`\n\nconst DaysFromFoundation = () => {\n  const START_TIME = new Date('2020-10-24').getTime()\n  const CURRENT_TIME = Date.now()\n  const TIME_DIFF = CURRENT_TIME - START_TIME\n  const daysFromStr = String(Math.floor(TIME_DIFF / (1000 * 60 * 60 * 24)))\n\n  return (\n    <Content>\n      建立から\n      {[...daysFromStr].map((str, index) => {\n        return <NumberText key={str + String(index)}>{str}</NumberText>\n      })}\n      日目です\n    </Content>\n  )\n}\n\nexport default DaysFromFoundation\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nconst RandomWordWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  h2 {\n    margin: 0 16px;\n  }\n`\n\nconst ImgWrap = styled.div`\n  padding: 16px;\n`\n\nconst Title = styled.h2`\n  font-size: 30px;\n  font-weight: normal;\n`\n\nconst ParagraphWrap = styled.div`\n  flex: 0 0 50%;\n  display: flex;\n  align-content: center;\n  padding: 16px;\n  background-color: #30f3ff;\n  box-shadow: 4px 4px rgb(0, 0, 0, 0.75);\n`\n\nconst RandomWord = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allIndexCsv {\n          nodes {\n            word\n          }\n        }\n        file(relativePath: { eq: \"jushoku.svg\" }) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  const node = data.allIndexCsv.nodes\n  const number = Math.floor(Math.random() * node.length)\n\n  return (\n    <RandomWordWrap>\n      <ImgWrap>\n        <img src={data.file.publicURL} alt=\"住職\" />\n      </ImgWrap>\n      <Title>今日の住職のひとこと</Title>\n      <ParagraphWrap>\n        <p>{node[number].word}</p>\n      </ParagraphWrap>\n    </RandomWordWrap>\n  )\n}\n\nexport default RandomWord\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport '../components/layout.css'\nimport ContentWrap from '../components/contentWrap'\nimport GlobalNavigation from '../components/globalNavigation'\nimport Header from '../components/header'\nimport Marquee from '../components/marquee'\nimport AccessCounter from '../components/accessCounter'\nimport DaysFromFoundation from '../components/daysFromFoundation'\nimport RandomWord from '../components/randomWord'\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n`\n\nconst MainContents = styled.div`\n  padding: 30px 30px 60px;\n`\n\nconst CatchTextWrap = styled.div`\n  background-color: #ffa927;\n  box-shadow: 6px 6px rgb(0, 0, 0, 0.75);\n  padding: 20px;\n  p {\n    margin: 0;\n    text-align: center;\n    font-size: 22px;\n    line-height: 1.8;\n  }\n`\n\nconst ComponentWrap = styled.div`\n  margin: 30px 0;\n`\n\nconst FlexWrap = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n      }\n    }\n  }\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: IndexPageProps, context: any) {\n    super(props, context)\n  }\n  public render() {\n    return (\n      <div>\n        <Helmet\n          title={this.props.data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: this.props.data.site.siteMetadata.description,\n            },\n          ]}\n        />\n        <Container>\n          <Header />\n          <GlobalNavigation />\n          <ContentWrap>\n            <main>\n              <Marquee text=\"BADデータを作ってしまうとその除霊や供養にはその何倍ものコストがかかります。お金は大切に。\" />\n              <MainContents>\n                <CatchTextWrap>\n                  <p>\n                    BADオープンデータ供養寺は、\n                    <br />\n                    世の中に災厄をもたらすBADなオープンデータが二度とこの世を彷徨わないように\n                    <br />\n                    「供養（データクレンジング）」するために建立されました。\n                  </p>\n                </CatchTextWrap>\n                <ComponentWrap>\n                  <FlexWrap>\n                    <AccessCounter />\n                    <DaysFromFoundation />\n                  </FlexWrap>\n                </ComponentWrap>\n                <ComponentWrap>\n                  <RandomWord />\n                </ComponentWrap>\n                <Link to=\"/page-2/\">Go to page 2</Link>\n              </MainContents>\n            </main>\n          </ContentWrap>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\ntype Props = {\n  text: string\n  duration?: string\n  delay?: string\n}\n\nconst MarqueeWrap = styled.div`\n  padding: 16px 0;\n  overflow: hidden;\n  background-color: #000;\n  position: relative;\n`\nconst marqueeAnimation = keyframes`\n  from   { transform: translate(0%);}\n  99%,to { transform: translate(-100%);}\n`\nconst Paragraph = styled.p`\n  color: #00ff22;\n  margin: 0;\n  padding-left: 100%;\n  display: inline-block;\n  white-space: nowrap;\n  animation-name: ${marqueeAnimation};\n  animation-timing-function: linear;\n  animation-duration: ${(props: Props) =>\n    props.duration ? props.duration : '18s'};\n  animation-iteration-count: infinite;\n  animation-delay: ${(props: Props) => (props.delay ? props.delay : '0s')};\n  &::after {\n    content: '';\n    white-space: nowrap;\n    padding-right: 50px;\n  }\n`\n\nconst Marquee = (props: Props) => {\n  return (\n    <MarqueeWrap>\n      <Paragraph {...props}>{props.text}</Paragraph>\n    </MarqueeWrap>\n  )\n}\n\nexport default Marquee\n"],"sourceRoot":""}